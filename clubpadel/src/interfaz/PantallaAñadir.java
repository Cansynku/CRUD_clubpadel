/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfaz;

import java.awt.Color;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author javier
 */
public class PantallaAñadir extends javax.swing.JDialog {

    static Connection conn = iniciarConexion();

    /**
     * Creates new form PantallaAñadir
     */
    public PantallaAñadir(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(new Color(255,250,205));
        setIconImage(new ImageIcon(getClass().getResource("/interfaz/img/tenis.png")).getImage());
        idProfesores(); // Llena el comboBox de profesores
        cargarNiveles(); // Llena el comboBox de niveles
         cargarNiveles1(); // Llena el comboBox de niveles para alumnos
    }

    
    
    public static Connection iniciarConexion() {
        //Método para poder crear como variable global connection
        try {
            return DriverManager.getConnection("jdbc:mysql://localhost:3306/clubpadelnuevo?serverTimezone=UTC", "root", "caraculo");
        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
    }

private Map<String, Integer> profesoresMap = new HashMap<>();

public void idProfesores() {
    jComboBoxIDProfesores.removeAllItems();
    profesoresMap.clear();
    try {
        Statement st = conn.createStatement();
        String query = "SELECT id, nombre FROM profesores";
        ResultSet rs = st.executeQuery(query);

        while (rs.next()) {
            int id = rs.getInt("id");
            String nombre = rs.getString("nombre");
            profesoresMap.put(nombre, id); // Almacena el id junto con el nombre del profesor
            jComboBoxIDProfesores.addItem(nombre);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}

    
private Map<String, Integer> nivelesMap = new HashMap<>();

public void cargarNiveles() {
    jComboBoxNivel.removeAllItems();
    nivelesMap.clear();
    try {
        Statement st = conn.createStatement();
        String query = "SELECT id, nombre FROM nivelplaytomic";
        ResultSet rs = st.executeQuery(query);

        while (rs.next()) {
            int id = rs.getInt("id");
            String nombre = rs.getString("nombre");
            nivelesMap.put(nombre, id); // Agregar tanto el ID como el nombre al mapa
            jComboBoxNivel.addItem(nombre); // Agregar el nombre al ComboBox
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}

public void cargarNiveles1() {
    jComboBoxNivel1.removeAllItems(); // Limpiar el ComboBox antes de cargar los niveles
    try {
        Statement st = conn.createStatement();
        String query = "SELECT id, nombre FROM nivelplaytomic";
        ResultSet rs = st.executeQuery(query);

        while (rs.next()) {
            int id = rs.getInt("id");
            String nombre = rs.getString("nombre");
            // nivelesMap.put(nombre, id); // No es necesario almacenar los niveles en un mapa
            jComboBoxNivel1.addItem(nombre);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombreAlumno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldApellidoAlumno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDNIAlumno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCorreoAlumno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxNivel = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxIDProfesores = new javax.swing.JComboBox<>();
        jLabelResultadoAlumno = new javax.swing.JLabel();
        jButtonAñadirAlumno = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldNombreProfesor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldApellidoProfesor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldDNIProfesor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldCorreoProfesor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxNivel1 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescripcionProfesor = new javax.swing.JTextArea();
        jLabelResultadoProfesor = new javax.swing.JLabel();
        jButtonAñadirProfesor = new javax.swing.JButton();
        jButtonVolver = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ventana Añadir");
        setPreferredSize(new java.awt.Dimension(400, 350));

        jPanel1.setBackground(new java.awt.Color(255, 250, 205));
        jPanel1.setLayout(new java.awt.GridLayout(7, 2));

        jLabel1.setText("   NOMBRE:");
        jPanel1.add(jLabel1);
        jPanel1.add(jTextFieldNombreAlumno);

        jLabel2.setText("   APELLIDO:");
        jPanel1.add(jLabel2);
        jPanel1.add(jTextFieldApellidoAlumno);

        jLabel3.setText("   DNI:");
        jPanel1.add(jLabel3);
        jPanel1.add(jTextFieldDNIAlumno);

        jLabel4.setText("   CORREO ELECTRÓNICO:");
        jPanel1.add(jLabel4);
        jPanel1.add(jTextFieldCorreoAlumno);

        jLabel5.setText("   NIVEL PLAYTOMIC");
        jPanel1.add(jLabel5);

        jComboBoxNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNivelActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxNivel);

        jLabel12.setText("   PROFESOR");
        jPanel1.add(jLabel12);

        jComboBoxIDProfesores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIDProfesoresActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxIDProfesores);
        jPanel1.add(jLabelResultadoAlumno);

        jButtonAñadirAlumno.setBackground(new java.awt.Color(51, 255, 51));
        jButtonAñadirAlumno.setText("AÑADIR ALUMNO");
        jButtonAñadirAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirAlumnoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAñadirAlumno);

        jTabbedPane1.addTab("ALUMNO", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 250, 205));
        jPanel2.setLayout(new java.awt.GridLayout(7, 2));

        jLabel6.setText("   NOMBRE:");
        jPanel2.add(jLabel6);
        jPanel2.add(jTextFieldNombreProfesor);

        jLabel7.setText("   APELLIDO:");
        jPanel2.add(jLabel7);
        jPanel2.add(jTextFieldApellidoProfesor);

        jLabel8.setText("   DNI:");
        jPanel2.add(jLabel8);
        jPanel2.add(jTextFieldDNIProfesor);

        jLabel9.setText("   CORREO ELECTRÓNICO:");
        jPanel2.add(jLabel9);
        jPanel2.add(jTextFieldCorreoProfesor);

        jLabel10.setText("   NIVEL QUE IMPARTE:");
        jPanel2.add(jLabel10);

        jComboBoxNivel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNivel1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBoxNivel1);

        jLabel13.setText("   DESCRIPCIÓN");
        jPanel2.add(jLabel13);

        jTextAreaDescripcionProfesor.setColumns(20);
        jTextAreaDescripcionProfesor.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDescripcionProfesor);

        jPanel2.add(jScrollPane1);
        jPanel2.add(jLabelResultadoProfesor);

        jButtonAñadirProfesor.setBackground(new java.awt.Color(51, 255, 51));
        jButtonAñadirProfesor.setText("AÑADIR PROFESOR");
        jButtonAñadirProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirProfesorActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAñadirProfesor);

        jTabbedPane1.addTab("PROFESOR", jPanel2);

        jButtonVolver.setText("VOLVER AL MENÚ");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("LIMPIAR");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButtonLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonVolver)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolver)
                    .addComponent(jButtonLimpiar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        //Volver al menú 
        dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        jTextFieldApellidoAlumno.setText("");
        jTextFieldApellidoProfesor.setText("");
        jTextFieldCorreoAlumno.setText("");
        jTextFieldCorreoProfesor.setText("");
        jTextFieldDNIAlumno.setText("");
        jTextFieldDNIProfesor.setText("");
        jComboBoxNivel1.setSelectedIndex(0);
        jTextFieldNombreAlumno.setText("");
        jTextFieldNombreProfesor.setText("");
        jComboBoxIDProfesores.setSelectedIndex(0);
        jTextAreaDescripcionProfesor.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonAñadirProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirProfesorActionPerformed
                                                   
  // Comprueba que estén todos los datos disponibles para añadir
    if (!jTextFieldNombreProfesor.getText().isEmpty() && 
        !jTextFieldApellidoProfesor.getText().isEmpty() && 
        !jTextFieldDNIProfesor.getText().isEmpty() && 
        !jTextFieldCorreoProfesor.getText().isEmpty() && 
        jComboBoxNivel1.getSelectedItem() != null) {

        // Verifica el formato del DNI (8 números y una letra al final)
        String dni = jTextFieldDNIProfesor.getText();
        if (!dni.matches("\\d{8}[a-zA-Z]")) {
            JOptionPane.showMessageDialog(this, "El formato del DNI es inválido. Debe tener 8 números seguidos de una letra.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Sale del método sin continuar
        }

        try {
            // Obtiene el nivel seleccionado
            String nivelSeleccionado = jComboBoxNivel1.getSelectedItem().toString();

            // Obtiene el ID del nivel desde el mapa de niveles
            int nivel_id = nivelesMap.get(nivelSeleccionado);

            // Ejecuta la sentencia INSERT de profesores
            PreparedStatement ps = conn.prepareStatement("INSERT INTO profesores (nombre, apellido, dni, email, nivel_id, descripcion) VALUES (?, ?, ?, ?, ?, ?)");
            ps.setString(1, jTextFieldNombreProfesor.getText());
            ps.setString(2, jTextFieldApellidoProfesor.getText());
            ps.setString(3, dni);
            ps.setString(4, jTextFieldCorreoProfesor.getText());
            ps.setInt(5, nivel_id);
            ps.setString(6, jTextAreaDescripcionProfesor.getText());

            // Comprueba si se ha podido insertar correctamente y muestra un mensaje al usuario
            if (ps.executeUpdate() == 1) {
                JOptionPane.showMessageDialog(this, "Profesor añadido correctamente.", "Resultado", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al añadir al profesor.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Faltan datos por introducir.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButtonAñadirProfesorActionPerformed

    private void jButtonAñadirAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirAlumnoActionPerformed
  // Obtiene el nombre del nivel seleccionado
    String nombreNivelSeleccionado = jComboBoxNivel.getSelectedItem().toString();

    // Obtener el ID del nivel seleccionado desde el mapa
    Integer nivelId = nivelesMap.get(nombreNivelSeleccionado);

    try {
        // Ejecuta la sentencia INSERT de alumnos
        PreparedStatement ps = conn.prepareStatement("INSERT INTO alumnos (dni, nombre, apellido, email, nivel_id, profesor_id) VALUES (?, ?, ?, ?, ?, ?)");
        ps.setString(1, jTextFieldDNIAlumno.getText());
        ps.setString(2, jTextFieldNombreAlumno.getText());
        ps.setString(3, jTextFieldApellidoAlumno.getText());
        ps.setString(4, jTextFieldCorreoAlumno.getText());
        ps.setInt(5, nivelId); // Establece el ID del nivel
        ps.setInt(6, profesoresMap.get(jComboBoxIDProfesores.getSelectedItem().toString())); // profesor_id

        // Comprueba si se ha podido insertar correctamente y muestra un mensaje al usuario
        if (ps.executeUpdate() == 1) {
            JOptionPane.showMessageDialog(this, "Alumno añadido correctamente.", "Resultado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Error al añadir al alumno.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException | NumberFormatException ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_jButtonAñadirAlumnoActionPerformed

    private void jComboBoxIDProfesoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIDProfesoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIDProfesoresActionPerformed

    private void jComboBoxNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNivelActionPerformed

    private void jComboBoxNivel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNivel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNivel1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaAñadir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaAñadir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaAñadir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaAñadir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PantallaAñadir dialog = new PantallaAñadir(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAñadirAlumno;
    private javax.swing.JButton jButtonAñadirProfesor;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxIDProfesores;
    private javax.swing.JComboBox<String> jComboBoxNivel;
    private javax.swing.JComboBox<String> jComboBoxNivel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelResultadoAlumno;
    private javax.swing.JLabel jLabelResultadoProfesor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaDescripcionProfesor;
    private javax.swing.JTextField jTextFieldApellidoAlumno;
    private javax.swing.JTextField jTextFieldApellidoProfesor;
    private javax.swing.JTextField jTextFieldCorreoAlumno;
    private javax.swing.JTextField jTextFieldCorreoProfesor;
    private javax.swing.JTextField jTextFieldDNIAlumno;
    private javax.swing.JTextField jTextFieldDNIProfesor;
    private javax.swing.JTextField jTextFieldNombreAlumno;
    private javax.swing.JTextField jTextFieldNombreProfesor;
    // End of variables declaration//GEN-END:variables
}
